# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = phone-number-verification

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Mongo Module
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# App Module
play.modules.enabled += "uk.gov.hmrc.cipphonenumberverification.config.GuiceModule"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

cache {
  expiry = 15 # minutes
}

# Microservice specific config
mongodb {
  uri = "mongodb://localhost:27017/phone-number-verification?serverselectiontimeoutms=10000"
}

microservice {
  services {
    access-control {
      request.formUrl = "https://forms.gle/fdKcb5mSHWRAcSjb6"
      enabled = "false"
      allow-list = []
    }

    use-test-phone-number-verification-service = false

    user-notifications {
      phone {
        protocol = http
        host = localhost
        port = 6084
        auth-token = "local-test-token"
      }
    }
    internal-auth {
      host = localhost
      port = 6099
    }
  }
}
